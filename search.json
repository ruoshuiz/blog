[{"title":"永久免费二级域名，可托管到 CloudFlare！","path":"/posts/f5be8ff/","content":"今天给大家推荐一个免费域名注册方案，来自digitalplat，申请后可以托管到CloudFlare上进行管理使用。 域名申请教程1、免费域名申请：【链接直达】https://digitalplat.org 目前免费的后缀是 .dpdns.org 2、接下来只需注册一个账号就能获取到免费域名， 【注册链接】https://dash.domain.digitalplat.org/auth/register 注册好以后通过这个链接进行登入， 【登录链接】https://dash.domain.digitalplat.org/auth/login 注册用户的时候，务必使用自己常用的邮箱，否则将来忘记密码或者免费续订的时候不会出现问题。 3、把域名托管到 CloudFlare ，方便统一管理 【点击前往】 4、免费域名需要每 180 天续期一次。 订阅提醒部署项目源码：https://github.com/wangwangit/SubsTracker 登陆Cloudflare,创建worker,粘贴本项目中的js代码,【点击获取】 在Cloudflare 点击左侧：存储和数据库 – KV -创建KV – 用户和键值都填写： SUBSCRIPTIONS_KV 给worker绑定上键值对,【以及设置定时执行时间!】 注意：这里的名称一定是：SUBSCRIPTIONS_KV 否则后面需修改参数无法保存！ 最后打开worker提供的域名地址,输入默认账号密码: admin password 就可以访问。 提醒发送支持: 通过 Telegram,微信等发送及时提醒。 Telegram 配置： Bot Token 获取：@BotFatherChat ID 获取：@VersaToolsBot 在Telegram新建一个频道，将频道里的任意信息转发到 @VersaToolsBot 机器人上就可以获取到 Chat ID","tags":["免费域名"]},{"title":"Cloudflare 优选IP","path":"/posts/2a7d155b/","content":"未优选： 已优选： Worker路由反代全球并优选（新）本方法的原理为通过Worker反代你的源站，然后将Worker的入口节点进行优选。此方法不是传统的优选，源站接收到的Hosts头仍然是直接指向源站的解析以下代码是原Github全站反代代码的二改以实现Worker路由接入优选，可能有多余逻辑或者不完全适配于优选需求 创建一个Cloudflare Worker，写入代码 // 域名前缀映射配置const domain_mappings = 源站.com: 最终访问头.,//例如：//gitea.072103.xyz: gitea.,//则你设置Worker路由为gitea.*都将会反代到gitea.072103.xyz;addEventListener(fetch, event = event.respondWith(handleRequest(event.request)););async function handleRequest(request) const url = new URL(request.url); const current_host = url.host; // 强制使用 HTTPS if (url.protocol === http:) url.protocol = https:; return Response.redirect(url.href, 301); const host_prefix = getProxyPrefix(current_host); if (!host_prefix) return new Response(Proxy prefix not matched, status: 404 ); // 查找对应目标域名 let target_host = null; for (const [origin_domain, prefix] of Object.entries(domain_mappings)) if (host_prefix === prefix) target_host = origin_domain; break; if (!target_host) return new Response(No matching target host for prefix, status: 404 ); // 构造目标 URL const new_url = new URL(request.url); new_url.protocol = https:; new_url.host = target_host; // 创建新请求 const new_headers = new Headers(request.headers); new_headers.set(Host, target_host); new_headers.set(Referer, new_url.href); try const response = await fetch(new_url.href, method: request.method, headers: new_headers, body: request.method !== GET request.method !== HEAD ? request.body : undefined, redirect: manual ); // 复制响应头并添加CORS const response_headers = new Headers(response.headers); response_headers.set(access-control-allow-origin, *); response_headers.set(access-control-allow-credentials, true); response_headers.set(cache-control, public, max-age=600); response_headers.delete(content-security-policy); response_headers.delete(content-security-policy-report-only); return new Response(response.body, status: response.status, statusText: response.statusText, headers: response_headers ); catch (err) return new Response(`Proxy Error: $err.message`, status: 502 ); function getProxyPrefix(hostname) for (const prefix of Object.values(domain_mappings)) if (hostname.startsWith(prefix)) return prefix; return null; 创建路由 类似这样填写 最后写一条DNS解析 CNAME gitea.afo.im – 社区优选域名，如 cf.090227.xyz 即可 针对于A、AAAA、CNAME（SaaS接入）我们需要两个域名（比如：onani.cn和acofork.cn）。如果在同一CF账号下不可用，请尝试将俩域名放置在不同账号 这里我们让onani.cn成为主力域名，让acofork.cn成为辅助域名 首先新建一个DNS解析，指向你的源站，开启cf代理 前往辅助域名的 SSLTLS - 自定义主机名。设置回退源为你刚才的DNS解析的域名（xlog.acofork.cn） 点击添加自定义主机名。设置一个自定义主机名，比如 onani.cn ，然后选择自定义源服务器，填写第一步的域名，即 xlog.acofork.cn 。如果你想要创建多个优选也就这样添加，一个自定义主机名对应一个自定义源服务器。如果你将源服务器设为默认，则源服务器是回退源指定的服务器，即 xlog.acofork.cn 继续在你的辅助域名添加一条解析。CNAME到优选节点：cloudflare.182682.xyz，不开启cf代理 最后在你的主力域名添加解析。域名为之前在辅助域名的自定义主机名（onani.cn），目标为刚才的cdn.acofork.cn，不开启cf代理 优选完毕，尝试访问 （可选）你也可以将cdn子域的NS服务器更改为阿里云\\华为云\\腾讯云云解析做线路分流解析 优选工作流：用户访问-由于最终访问的域名设置了CNAME解析，所以实际上访问了cdn.acofork.cn，并且携带源主机名：onani.cn-到达cloudflare.182682.xyz进行优选-优选结束，cf边缘节点识别到了携带的源主机名：onani.cn查询发现了回退源-回退到回退源内容（xlog.acofork.cn）-访问成功 针对于Cloudflare Page 你可以直接将你绑定到Page的子域名直接更改NS服务器到阿里云\\华为云\\腾讯云云解析做线路分流解析 将您的Page项目升级为Worker项目，使用下面的Worker优选方案（更简单）。详细方法见： 【CF Page一键迁移到Worker？好处都有啥？-哔哩哔哩】 https://b23.tv/t5Bfaq1 针对于Cloudflare Workers在Workers中添加路由，然后直接将你的路由域名从指向 xxx.worker.dev 改为 cloudflare.182682.xyz 等优选域名即可","tags":["Cloudflare"]}]